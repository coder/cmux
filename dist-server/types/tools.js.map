{"version":3,"file":"tools.js","sourceRoot":"","sources":["../../src/types/tools.ts"],"names":[],"mappings":";AAAA;;;GAGG","sourcesContent":["/**\n * Shared type definitions for AI tools\n * These types are used by both the tool implementations and UI components\n */\n\n// Bash Tool Types\nexport interface BashToolArgs {\n  script: string;\n  timeout_secs: number;\n  max_lines: number;\n  stdin?: string;\n}\n\ninterface CommonBashFields {\n  // wall_duration_ms is provided to give the agent a sense of how long a command takes which\n  // should inform future timeouts.\n  wall_duration_ms: number;\n}\n\nexport type BashToolResult =\n  | (CommonBashFields & {\n      success: true;\n      output: string;\n      exitCode: 0;\n      truncated?: boolean;\n    })\n  | (CommonBashFields & {\n      success: false;\n      output?: string;\n      exitCode: number;\n      error: string;\n      truncated?: boolean;\n    });\n\n// File Read Tool Types\nexport interface FileReadToolArgs {\n  filePath: string;\n  offset?: number; // 1-based starting line number (optional)\n  limit?: number; // number of lines to return from offset (optional)\n}\n\nexport type FileReadToolResult =\n  | {\n      success: true;\n      file_size: number;\n      modifiedTime: string;\n      lines_read: number;\n      content: string;\n      lease: string;\n    }\n  | {\n      success: false;\n      error: string;\n    };\n\n// File Edit Replace Tool Types\nexport interface FileEditReplaceEdit {\n  old_string: string;\n  new_string: string;\n  replace_count?: number; // Default: 1, -1 means replace all\n}\n\nexport interface FileEditReplaceToolArgs {\n  file_path: string;\n  edits: FileEditReplaceEdit[];\n  lease: string;\n}\n\nexport type FileEditReplaceToolResult =\n  | {\n      success: true;\n      edits_applied: number;\n      lease: string;\n      diff: string;\n    }\n  | {\n      success: false;\n      error: string;\n    };\n\n// File Edit Insert Tool Types\nexport interface FileEditInsertToolArgs {\n  file_path: string;\n  line_offset: number; // 1-indexed line position (0 = insert at top, N = insert after line N)\n  content: string;\n  lease: string;\n}\n\nexport type FileEditInsertToolResult =\n  | {\n      success: true;\n      lease: string;\n      diff: string;\n    }\n  | {\n      success: false;\n      error: string;\n    };\n\n// Propose Plan Tool Types\nexport interface ProposePlanToolArgs {\n  title: string;\n  plan: string;\n}\n\nexport interface ProposePlanToolResult {\n  success: true;\n  title: string;\n  plan: string;\n  message: string;\n}\n"]}
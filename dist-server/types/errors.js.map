{"version":3,"file":"errors.js","sourceRoot":"","sources":["../../src/types/errors.ts"],"names":[],"mappings":";AAAA;;;GAGG;;AAgBH,sCAIC;AAKD,wCAEC;AAdD;;GAEG;AACH,SAAgB,aAAa,CAC3B,KAAuB;IAEvB,OAAO,KAAK,CAAC,IAAI,KAAK,mBAAmB,CAAC;AAC5C,CAAC;AAED;;GAEG;AACH,SAAgB,cAAc,CAAC,KAAuB;IACpD,OAAO,KAAK,CAAC,IAAI,KAAK,SAAS,CAAC;AAClC,CAAC","sourcesContent":["/**\n * Strongly-typed error types for send message operations.\n * This discriminated union allows the frontend to handle different error cases appropriately.\n */\n\n/**\n * Discriminated union for all possible sendMessage errors\n * The frontend is responsible for language and messaging for api_key_not_found and\n * provider_not_supported errors. Other error types include details needed for display.\n */\nexport type SendMessageError =\n  | { type: \"api_key_not_found\"; provider: string }\n  | { type: \"provider_not_supported\"; provider: string }\n  | { type: \"invalid_model_string\"; message: string }\n  | { type: \"unknown\"; raw: string };\n\n/**\n * Type guard to check if error is an API key error\n */\nexport function isApiKeyError(\n  error: SendMessageError\n): error is { type: \"api_key_not_found\"; provider: string } {\n  return error.type === \"api_key_not_found\";\n}\n\n/**\n * Type guard to check if error is an unknown error\n */\nexport function isUnknownError(error: SendMessageError): error is { type: \"unknown\"; raw: string } {\n  return error.type === \"unknown\";\n}\n\n/**\n * Stream error types - categorizes errors during AI streaming\n * Used across backend (StreamManager) and frontend (StreamErrorMessage)\n */\nexport type StreamErrorType =\n  | \"authentication\" // API key issues, 401 errors\n  | \"rate_limit\" // 429 rate limiting\n  | \"server_error\" // 5xx server errors\n  | \"api\" // Generic API errors\n  | \"retry_failed\" // Retry exhausted\n  | \"aborted\" // User aborted\n  | \"network\" // Network/fetch errors\n  | \"context_exceeded\" // Context length/token limit exceeded\n  | \"quota\" // Usage quota/billing limits\n  | \"model_not_found\" // Model does not exist\n  | \"unknown\"; // Catch-all\n"]}
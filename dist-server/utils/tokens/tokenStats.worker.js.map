{"version":3,"file":"tokenStats.worker.js","sourceRoot":"","sources":["../../../src/utils/tokens/tokenStats.worker.ts"],"names":[],"mappings":";AAAA;;;GAGG;;AAIH,iEAA6D;AAoB7D,uCAAuC;AACvC,IAAI,CAAC,SAAS,GAAG,CAAC,CAA8B,EAAE,EAAE;IAClD,MAAM,EAAE,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC;IAEvC,IAAI,CAAC;QACH,MAAM,KAAK,GAAG,IAAA,0CAAmB,EAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;QACnD,MAAM,QAAQ,GAAmB;YAC/B,EAAE;YACF,OAAO,EAAE,IAAI;YACb,KAAK;SACN,CAAC;QACF,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;IAC7B,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,MAAM,aAAa,GAAgB;YACjC,EAAE;YACF,OAAO,EAAE,KAAK;YACd,KAAK,EAAE,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC;SAC9D,CAAC;QACF,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;IAClC,CAAC;AACH,CAAC,CAAC","sourcesContent":["/**\n * Web Worker for calculating token statistics off the main thread\n * This prevents UI blocking during expensive tokenization operations\n */\n\nimport type { CmuxMessage } from \"@/types/message\";\nimport type { ChatStats } from \"@/types/chatStats\";\nimport { calculateTokenStats } from \"./tokenStatsCalculator\";\n\nexport interface WorkerRequest {\n  id: string;\n  messages: CmuxMessage[];\n  model: string;\n}\n\nexport interface WorkerResponse {\n  id: string;\n  success: true;\n  stats: ChatStats;\n}\n\nexport interface WorkerError {\n  id: string;\n  success: false;\n  error: string;\n}\n\n// Handle incoming calculation requests\nself.onmessage = (e: MessageEvent<WorkerRequest>) => {\n  const { id, messages, model } = e.data;\n\n  try {\n    const stats = calculateTokenStats(messages, model);\n    const response: WorkerResponse = {\n      id,\n      success: true,\n      stats,\n    };\n    self.postMessage(response);\n  } catch (error) {\n    const errorResponse: WorkerError = {\n      id,\n      success: false,\n      error: error instanceof Error ? error.message : String(error),\n    };\n    self.postMessage(errorResponse);\n  }\n};\n"]}
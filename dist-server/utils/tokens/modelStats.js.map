{"version":3,"file":"modelStats.js","sourceRoot":"","sources":["../../../src/utils/tokens/modelStats.ts"],"names":[],"mappings":";;;;;AAmCA,sCAqCC;AAxED,gEAAuC;AACvC,iDAA6C;AAmB7C;;;;GAIG;AACH,SAAS,gBAAgB,CAAC,WAAmB;IAC3C,MAAM,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACrC,OAAO,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAChD,CAAC;AAED;;;;GAIG;AACH,SAAgB,aAAa,CAAC,WAAmB;IAC/C,MAAM,SAAS,GAAG,gBAAgB,CAAC,WAAW,CAAC,CAAC;IAEhD,+BAA+B;IAC/B,IAAI,IAAI,GAAI,qBAA2C,CAAC,SAAS,CAAC,CAAC;IAEnE,4CAA4C;IAC5C,IAAI,CAAC,IAAI,EAAE,CAAC;QACV,IAAI,GAAI,0BAA4C,CAAC,SAAS,CAAC,CAAC;IAClE,CAAC;IAED,IAAI,CAAC,IAAI,EAAE,CAAC;QACV,OAAO,IAAI,CAAC;IACd,CAAC;IAED,0DAA0D;IAC1D,IACE,OAAO,IAAI,CAAC,gBAAgB,KAAK,QAAQ;QACzC,OAAO,IAAI,CAAC,oBAAoB,KAAK,QAAQ;QAC7C,OAAO,IAAI,CAAC,qBAAqB,KAAK,QAAQ,EAC9C,CAAC;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,OAAO;QACL,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;QACvC,oBAAoB,EAAE,IAAI,CAAC,oBAAoB;QAC/C,qBAAqB,EAAE,IAAI,CAAC,qBAAqB;QACjD,+BAA+B,EAC7B,OAAO,IAAI,CAAC,+BAA+B,KAAK,QAAQ;YACtD,CAAC,CAAC,IAAI,CAAC,+BAA+B;YACtC,CAAC,CAAC,SAAS;QACf,2BAA2B,EACzB,OAAO,IAAI,CAAC,2BAA2B,KAAK,QAAQ;YAClD,CAAC,CAAC,IAAI,CAAC,2BAA2B;YAClC,CAAC,CAAC,SAAS;KAChB,CAAC;AACJ,CAAC","sourcesContent":["import modelsData from \"./models.json\";\nimport { modelsExtra } from \"./models-extra\";\n\nexport interface ModelStats {\n  max_input_tokens: number;\n  input_cost_per_token: number;\n  output_cost_per_token: number;\n  cache_creation_input_token_cost?: number;\n  cache_read_input_token_cost?: number;\n}\n\ninterface RawModelData {\n  max_input_tokens?: number | string;\n  input_cost_per_token?: number;\n  output_cost_per_token?: number;\n  cache_creation_input_token_cost?: number;\n  cache_read_input_token_cost?: number;\n  [key: string]: unknown;\n}\n\n/**\n * Extracts the model name from a Vercel AI SDK model string\n * @param modelString - Format: \"provider:model-name\" or just \"model-name\"\n * @returns The model name without the provider prefix\n */\nfunction extractModelName(modelString: string): string {\n  const parts = modelString.split(\":\");\n  return parts.length > 1 ? parts[1] : parts[0];\n}\n\n/**\n * Gets model statistics for a given Vercel AI SDK model string\n * @param modelString - Format: \"provider:model-name\" (e.g., \"anthropic:claude-opus-4-1\")\n * @returns ModelStats or null if model not found\n */\nexport function getModelStats(modelString: string): ModelStats | null {\n  const modelName = extractModelName(modelString);\n\n  // Check main models.json first\n  let data = (modelsData as Record<string, RawModelData>)[modelName];\n\n  // Fall back to models-extra.ts if not found\n  if (!data) {\n    data = (modelsExtra as Record<string, RawModelData>)[modelName];\n  }\n\n  if (!data) {\n    return null;\n  }\n\n  // Validate that we have required fields and correct types\n  if (\n    typeof data.max_input_tokens !== \"number\" ||\n    typeof data.input_cost_per_token !== \"number\" ||\n    typeof data.output_cost_per_token !== \"number\"\n  ) {\n    return null;\n  }\n\n  return {\n    max_input_tokens: data.max_input_tokens,\n    input_cost_per_token: data.input_cost_per_token,\n    output_cost_per_token: data.output_cost_per_token,\n    cache_creation_input_token_cost:\n      typeof data.cache_creation_input_token_cost === \"number\"\n        ? data.cache_creation_input_token_cost\n        : undefined,\n    cache_read_input_token_cost:\n      typeof data.cache_read_input_token_cost === \"number\"\n        ? data.cache_read_input_token_cost\n        : undefined,\n  };\n}\n"]}
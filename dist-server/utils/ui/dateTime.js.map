{"version":3,"file":"dateTime.js","sourceRoot":"","sources":["../../../src/utils/ui/dateTime.ts"],"names":[],"mappings":";;AAQA,0CA2BC;AASD,kDAWC;AAvDD;;;;;;;GAOG;AACH,SAAgB,eAAe,CAAC,SAAiB;IAC/C,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC;IACjC,MAAM,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;IAEvB,uCAAuC;IACvC,MAAM,OAAO,GACX,IAAI,CAAC,OAAO,EAAE,KAAK,GAAG,CAAC,OAAO,EAAE;QAChC,IAAI,CAAC,QAAQ,EAAE,KAAK,GAAG,CAAC,QAAQ,EAAE;QAClC,IAAI,CAAC,WAAW,EAAE,KAAK,GAAG,CAAC,WAAW,EAAE,CAAC;IAE3C,IAAI,OAAO,EAAE,CAAC;QACZ,oBAAoB;QACpB,OAAO,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE;YACtC,IAAI,EAAE,SAAS;YACf,MAAM,EAAE,SAAS;YACjB,MAAM,EAAE,IAAI;SACb,CAAC,CAAC;IACL,CAAC;SAAM,CAAC;QACN,4BAA4B;QAC5B,OAAO,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE;YACtC,KAAK,EAAE,OAAO;YACd,GAAG,EAAE,SAAS;YACd,IAAI,EAAE,SAAS;YACf,MAAM,EAAE,SAAS;YACjB,MAAM,EAAE,IAAI;SACb,CAAC,CAAC;IACL,CAAC;AACH,CAAC;AAED;;;;;;GAMG;AACH,SAAgB,mBAAmB,CAAC,SAAiB;IACnD,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC;IACjC,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE;QAClC,IAAI,EAAE,SAAS;QACf,KAAK,EAAE,MAAM;QACb,GAAG,EAAE,SAAS;QACd,IAAI,EAAE,SAAS;QACf,MAAM,EAAE,SAAS;QACjB,MAAM,EAAE,SAAS;QACjB,MAAM,EAAE,IAAI;KACb,CAAC,CAAC;AACL,CAAC","sourcesContent":["/**\n * Formats a Unix timestamp (milliseconds) into a \"kitchen\" format:\n * - \"8:13 PM\" if the timestamp is from today\n * - \"Oct 23, 8:13 PM\" if the timestamp is from a different day\n *\n * @param timestamp Unix timestamp in milliseconds\n * @returns Formatted time string\n */\nexport function formatTimestamp(timestamp: number): string {\n  const date = new Date(timestamp);\n  const now = new Date();\n\n  // Check if the timestamp is from today\n  const isToday =\n    date.getDate() === now.getDate() &&\n    date.getMonth() === now.getMonth() &&\n    date.getFullYear() === now.getFullYear();\n\n  if (isToday) {\n    // Format: \"8:13 PM\"\n    return date.toLocaleTimeString(\"en-US\", {\n      hour: \"numeric\",\n      minute: \"2-digit\",\n      hour12: true,\n    });\n  } else {\n    // Format: \"Oct 23, 8:13 PM\"\n    return date.toLocaleTimeString(\"en-US\", {\n      month: \"short\",\n      day: \"numeric\",\n      hour: \"numeric\",\n      minute: \"2-digit\",\n      hour12: true,\n    });\n  }\n}\n\n/**\n * Formats a Unix timestamp (milliseconds) into a full date/time string with high precision.\n * Used for tooltips and detailed views.\n *\n * @param timestamp Unix timestamp in milliseconds\n * @returns Formatted full timestamp string (e.g., \"October 23, 2025, 8:13:42 PM\")\n */\nexport function formatFullTimestamp(timestamp: number): string {\n  const date = new Date(timestamp);\n  return date.toLocaleString(\"en-US\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n}\n"]}
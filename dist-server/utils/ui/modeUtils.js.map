{"version":3,"file":"modeUtils.js","sourceRoot":"","sources":["../../../src/utils/ui/modeUtils.ts"],"names":[],"mappings":";;AAMA,4CAeC;AAlBD;;GAEG;AACH,SAAgB,gBAAgB,CAAC,IAAY;IAC3C,IAAI,IAAI,KAAK,MAAM,EAAE,CAAC;QACpB,OAAO;YACL,EAAE,WAAW,EAAE,cAAc,EAAE,MAAM,EAAE,SAAS,EAAE;YAClD,EAAE,WAAW,EAAE,iBAAiB,EAAE,MAAM,EAAE,SAAS,EAAE;YACrD,EAAE,WAAW,EAAE,cAAc,EAAE,MAAM,EAAE,QAAQ,EAAE;SAClD,CAAC;IACJ,CAAC;IAED,YAAY;IACZ,OAAO;QACL,EAAE,WAAW,EAAE,cAAc,EAAE,MAAM,EAAE,SAAS,EAAE;QAClD,EAAE,WAAW,EAAE,iBAAiB,EAAE,MAAM,EAAE,SAAS,EAAE;QACrD,EAAE,WAAW,EAAE,cAAc,EAAE,MAAM,EAAE,QAAQ,EAAE;KAClD,CAAC;AACJ,CAAC","sourcesContent":["import type { UIMode } from \"@/types/mode\";\nimport type { ToolPolicy } from \"@/utils/tools/toolPolicy\";\n\n/**\n * Get the tool policy for a given UI mode\n */\nexport function modeToToolPolicy(mode: UIMode): ToolPolicy {\n  if (mode === \"plan\") {\n    return [\n      { regex_match: \"file_edit_.*\", action: \"disable\" },\n      { regex_match: \"compact_summary\", action: \"disable\" },\n      { regex_match: \"propose_plan\", action: \"enable\" },\n    ];\n  }\n\n  // exec mode\n  return [\n    { regex_match: \"propose_plan\", action: \"disable\" },\n    { regex_match: \"compact_summary\", action: \"disable\" },\n    { regex_match: \"file_edit_.*\", action: \"enable\" },\n  ];\n}\n"]}
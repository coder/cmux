{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../src/utils/slashCommands/types.ts"],"names":[],"mappings":";AAAA;;GAEG","sourcesContent":["/**\n * Shared types for slash command system\n */\n\nexport type ParsedCommand =\n  | { type: \"providers-set\"; provider: string; keyPath: string[]; value: string }\n  | { type: \"providers-help\" }\n  | { type: \"providers-invalid-subcommand\"; subcommand: string }\n  | { type: \"providers-missing-args\"; subcommand: string; argCount: number }\n  | { type: \"model-set\"; modelString: string }\n  | { type: \"model-help\" }\n  | { type: \"clear\" }\n  | { type: \"truncate\"; percentage: number }\n  | { type: \"compact\"; maxOutputTokens?: number; instructions?: string }\n  | { type: \"unknown-command\"; command: string; subcommand?: string }\n  | null;\n\nexport interface SuggestionsHandlerArgs {\n  stage: number;\n  partialToken: string;\n  definitionPath: readonly SlashCommandDefinition[];\n  completedTokens: string[];\n  context: SlashSuggestionContext;\n}\n\nexport type SuggestionsHandler = (args: SuggestionsHandlerArgs) => SlashSuggestion[] | null;\n\nexport interface SlashCommandDefinition {\n  key: string;\n  description: string;\n  appendSpace?: boolean;\n  handler?: SlashCommandHandler;\n  children?: readonly SlashCommandDefinition[];\n  suggestions?: SuggestionsHandler;\n}\n\ninterface SlashCommandHandlerArgs {\n  definition: SlashCommandDefinition;\n  path: readonly SlashCommandDefinition[];\n  remainingTokens: string[];\n  cleanRemainingTokens: string[];\n}\n\nexport type SlashCommandHandler = (input: SlashCommandHandlerArgs) => ParsedCommand;\n\nexport interface SlashSuggestion {\n  id: string;\n  display: string;\n  description: string;\n  replacement: string;\n}\n\nexport interface SlashSuggestionContext {\n  providerNames?: string[];\n}\n\nexport interface SuggestionDefinition {\n  key: string;\n  description: string;\n  appendSpace?: boolean;\n}\n"]}
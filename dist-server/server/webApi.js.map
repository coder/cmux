{"version":3,"file":"webApi.js","sourceRoot":"","sources":["../../src/server/webApi.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Web API Client - Replaces Electron IPC with HTTP/WebSocket calls\n * This is used by the renderer when running in web mode (mobile)\n */\nimport type { IPCApi, WorkspaceChatMessage } from \"../types/ipc\";\nimport { IPC_CHANNELS, getChatChannel } from \"../constants/ipc-constants\";\n\nconst API_BASE = typeof window !== \"undefined\" \n  ? (window.location.protocol === \"file:\" \n    ? \"http://localhost:3000\" \n    : `${window.location.protocol}//${window.location.host}`)\n  : \"http://localhost:3000\";\n\nconst WS_BASE = API_BASE.replace(\"http://\", \"ws://\").replace(\"https://\", \"wss://\");\n\ninterface InvokeResponse<T> {\n  success: boolean;\n  data?: T;\n  error?: string;\n}\n\n// Helper function to invoke IPC handlers via HTTP\nasync function invokeIPC<T>(channel: string, ...args: unknown[]): Promise<T> {\n  const response = await fetch(`${API_BASE}/ipc/${channel}`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ args }),\n  });\n\n  if (!response.ok) {\n    throw new Error(`HTTP error! status: ${response.status}`);\n  }\n\n  const result: InvokeResponse<T> = await response.json();\n\n  if (!result.success) {\n    throw new Error(result.error || \"Unknown error\");\n  }\n\n  return result.data as T;\n}\n\n// WebSocket connection manager\nclass WebSocketManager {\n  private ws: WebSocket | null = null;\n  private reconnectTimer: ReturnType<typeof setTimeout> | null = null;\n  private messageHandlers = new Map<string, Set<(data: unknown) => void>>();\n  private isConnecting = false;\n  private shouldReconnect = true;\n\n  connect(): void {\n    if (this.ws?.readyState === WebSocket.OPEN || this.isConnecting) {\n      return;\n    }\n\n    this.isConnecting = true;\n    this.ws = new WebSocket(`${WS_BASE}/ws`);\n\n    this.ws.onopen = () => {\n      console.log(\"WebSocket connected\");\n      this.isConnecting = false;\n\n      // Resubscribe to all channels\n      for (const channel of this.messageHandlers.keys()) {\n        this.subscribe(channel);\n      }\n    };\n\n    this.ws.onmessage = (event) => {\n      try {\n        const { channel, args } = JSON.parse(event.data);\n        const handlers = this.messageHandlers.get(channel);\n        if (handlers) {\n          handlers.forEach((handler) => handler(args[0]));\n        }\n      } catch (error) {\n        console.error(\"Error handling WebSocket message:\", error);\n      }\n    };\n\n    this.ws.onerror = (error) => {\n      console.error(\"WebSocket error:\", error);\n      this.isConnecting = false;\n    };\n\n    this.ws.onclose = () => {\n      console.log(\"WebSocket disconnected\");\n      this.isConnecting = false;\n      this.ws = null;\n\n      // Attempt to reconnect after a delay\n      if (this.shouldReconnect) {\n        this.reconnectTimer = setTimeout(() => this.connect(), 2000);\n      }\n    };\n  }\n\n  subscribe(channel: string, workspaceId?: string): void {\n    if (this.ws?.readyState === WebSocket.OPEN) {\n      if (channel.startsWith(IPC_CHANNELS.WORKSPACE_CHAT_PREFIX)) {\n        this.ws.send(\n          JSON.stringify({\n            type: \"subscribe\",\n            channel: \"workspace:chat\",\n            workspaceId,\n          })\n        );\n      } else if (channel === IPC_CHANNELS.WORKSPACE_METADATA) {\n        this.ws.send(\n          JSON.stringify({\n            type: \"subscribe\",\n            channel: \"workspace:metadata\",\n          })\n        );\n      }\n    }\n  }\n\n  unsubscribe(channel: string, workspaceId?: string): void {\n    if (this.ws?.readyState === WebSocket.OPEN) {\n      if (channel.startsWith(IPC_CHANNELS.WORKSPACE_CHAT_PREFIX)) {\n        this.ws.send(\n          JSON.stringify({\n            type: \"unsubscribe\",\n            channel: \"workspace:chat\",\n            workspaceId,\n          })\n        );\n      } else if (channel === IPC_CHANNELS.WORKSPACE_METADATA) {\n        this.ws.send(\n          JSON.stringify({\n            type: \"unsubscribe\",\n            channel: \"workspace:metadata\",\n          })\n        );\n      }\n    }\n  }\n\n  on(channel: string, handler: (data: unknown) => void, workspaceId?: string): () => void {\n    if (!this.messageHandlers.has(channel)) {\n      this.messageHandlers.set(channel, new Set());\n      this.connect();\n      this.subscribe(channel, workspaceId);\n    }\n\n    const handlers = this.messageHandlers.get(channel)!;\n    handlers.add(handler);\n\n    // Return unsubscribe function\n    return () => {\n      handlers.delete(handler);\n      if (handlers.size === 0) {\n        this.messageHandlers.delete(channel);\n        this.unsubscribe(channel, workspaceId);\n      }\n    };\n  }\n\n  disconnect(): void {\n    this.shouldReconnect = false;\n    if (this.reconnectTimer) {\n      clearTimeout(this.reconnectTimer);\n      this.reconnectTimer = null;\n    }\n    if (this.ws) {\n      this.ws.close();\n      this.ws = null;\n    }\n  }\n}\n\nconst wsManager = new WebSocketManager();\n\n// Create the Web API implementation\nexport const webApi: IPCApi = {\n  config: {\n    load: () => invokeIPC(IPC_CHANNELS.CONFIG_LOAD),\n    save: (config) => invokeIPC(IPC_CHANNELS.CONFIG_SAVE, config),\n  },\n  dialog: {\n    selectDirectory: () => invokeIPC(IPC_CHANNELS.DIALOG_SELECT_DIR),\n  },\n  providers: {\n    setProviderConfig: (provider, keyPath, value) =>\n      invokeIPC(IPC_CHANNELS.PROVIDERS_SET_CONFIG, provider, keyPath, value),\n    list: () => invokeIPC(IPC_CHANNELS.PROVIDERS_LIST),\n  },\n  workspace: {\n    list: () => invokeIPC(IPC_CHANNELS.WORKSPACE_LIST),\n    create: (projectPath, branchName) =>\n      invokeIPC(IPC_CHANNELS.WORKSPACE_CREATE, projectPath, branchName),\n    remove: (workspaceId: string) => invokeIPC(IPC_CHANNELS.WORKSPACE_REMOVE, workspaceId),\n    rename: (workspaceId: string, newName: string) =>\n      invokeIPC(IPC_CHANNELS.WORKSPACE_RENAME, workspaceId, newName),\n    sendMessage: (workspaceId, message, options) =>\n      invokeIPC(IPC_CHANNELS.WORKSPACE_SEND_MESSAGE, workspaceId, message, options),\n    truncateHistory: (workspaceId, percentage) =>\n      invokeIPC(IPC_CHANNELS.WORKSPACE_TRUNCATE_HISTORY, workspaceId, percentage),\n    replaceChatHistory: (workspaceId, summaryMessage) =>\n      invokeIPC(IPC_CHANNELS.WORKSPACE_REPLACE_HISTORY, workspaceId, summaryMessage),\n    getInfo: (workspaceId) => invokeIPC(IPC_CHANNELS.WORKSPACE_GET_INFO, workspaceId),\n    executeBash: (workspaceId, script, options) =>\n      invokeIPC(IPC_CHANNELS.WORKSPACE_EXECUTE_BASH, workspaceId, script, options),\n    openTerminal: (workspacePath) =>\n      invokeIPC(IPC_CHANNELS.WORKSPACE_OPEN_TERMINAL, workspacePath),\n\n    onChat: (workspaceId, callback) => {\n      const channel = getChatChannel(workspaceId);\n      return wsManager.on(channel, callback as (data: unknown) => void, workspaceId);\n    },\n\n    onMetadata: (callback) => {\n      return wsManager.on(\n        IPC_CHANNELS.WORKSPACE_METADATA,\n        callback as (data: unknown) => void\n      );\n    },\n  },\n};\n\n// Cleanup on page unload\nif (typeof window !== \"undefined\") {\n  window.addEventListener(\"beforeunload\", () => {\n    wsManager.disconnect();\n  });\n}\n"]}
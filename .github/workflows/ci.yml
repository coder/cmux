name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["**"]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest-8-cores
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Generate version file
        run: ./scripts/generate-version.sh

      - name: Run lint
        run: bun lint

  fmt-check:
    name: Format Check
    runs-on: ubuntu-latest-8-cores
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Check formatting
        run: bun fmt:check

  test:
    name: Test
    runs-on: ubuntu-latest-8-cores
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run tests
        run: bun test

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest-8-cores
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run integration tests
        run: bun test:integration
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}

  check-codex-comments:
    name: Check Codex Comments
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for unresolved Codex comments
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ./scripts/check_codex_comments.sh ${{ github.event.pull_request.number }}

# Trigger CI run

name: Build

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["**"]
  workflow_dispatch: # Allow manual triggering

jobs:
  build-macos:
    name: Build macOS
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build application
        run: bun run build

      - name: Package for macOS
        run: |
          # Decode certificate to file to avoid issues with newlines in base64 string
          if [ -n "${{ secrets.MACOS_CERTIFICATE }}" ]; then
            echo "${{ secrets.MACOS_CERTIFICATE }}" | base64 -D > /tmp/certificate.p12
            export CSC_LINK="/tmp/certificate.p12"
            export CSC_KEY_PASSWORD="${{ secrets.MACOS_CERTIFICATE_PWD }}"
          fi
          
          # Notarization credentials (optional - will skip if not provided)
          if [ -n "${{ secrets.APPLE_API_KEY_ID }}" ]; then
            export API_KEY_ID="${{ secrets.APPLE_API_KEY_ID }}"
            export API_KEY_ISSUER_ID="${{ secrets.APPLE_API_ISSUER_ID }}"
            export API_KEY="${{ secrets.APPLE_API_KEY }}"
            echo "✅ Notarization credentials found (API key) - will notarize"
          else
            echo "⚠️  No notarization credentials - skipping notarization"
          fi
          
          bun run dist:mac

      - name: Upload macOS DMG (x64)
        uses: actions/upload-artifact@v4
        with:
          name: macos-dmg-x64
          path: release/*-x64.dmg
          retention-days: 30
          if-no-files-found: error

      - name: Upload macOS DMG (arm64)
        uses: actions/upload-artifact@v4
        with:
          name: macos-dmg-arm64
          path: release/*-arm64.dmg
          retention-days: 30
          if-no-files-found: error

  build-linux:
    name: Build Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build application
        run: bun run build

      - name: Package for Linux
        run: bun run dist:linux

      - name: Upload Linux AppImage
        uses: actions/upload-artifact@v4
        with:
          name: linux-appimage
          path: release/*.AppImage
          retention-days: 30
          if-no-files-found: error

name: Build

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["**"]
  workflow_dispatch: # Allow manual triggering

jobs:
  build-macos:
    name: Build macOS
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build application
        run: bun run build

      - name: Debug Certificate Format
        env:
          MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
          HAS_CERT: ${{ secrets.MACOS_CERTIFICATE != '' }}
        if: env.HAS_CERT == 'true'
        run: |
          echo "Certificate length: ${#MACOS_CERTIFICATE}"
          echo "First 50 chars: ${MACOS_CERTIFICATE:0:50}"
          echo "Attempting to decode and check format..."
          echo "$MACOS_CERTIFICATE" | base64 --decode > /tmp/test.p12 2>&1 || echo "Base64 decode failed"
          if [ -f /tmp/test.p12 ]; then
            file /tmp/test.p12
            openssl pkcs12 -in /tmp/test.p12 -noout -passin pass:"${{ secrets.MACOS_CERTIFICATE_PWD }}" 2>&1 || echo "PKCS12 validation failed"
          fi

      - name: Package for macOS
        env:
          CSC_LINK: ${{ secrets.MACOS_CERTIFICATE && format('base64:{0}', secrets.MACOS_CERTIFICATE) || '' }}
          CSC_KEY_PASSWORD: ${{ secrets.MACOS_CERTIFICATE_PWD }}
        run: bun run dist:mac

      - name: Upload macOS DMG
        uses: actions/upload-artifact@v4
        with:
          name: macos-dmg
          path: release/*.dmg
          retention-days: 30
          if-no-files-found: error

  build-linux:
    name: Build Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build application
        run: bun run build

      - name: Package for Linux
        run: bun run dist:linux

      - name: Upload Linux AppImage
        uses: actions/upload-artifact@v4
        with:
          name: linux-appimage
          path: release/*.AppImage
          retention-days: 30
          if-no-files-found: error

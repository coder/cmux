{"version":3,"file":"testUtils.js","sourceRoot":"","sources":["testUtils.ts"],"names":[],"mappings":";AAAA;;;;;;;GAOG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAaH,8DAEC;AAMD,0CAaC;AAKD,8BAWC;AAhDD,mCAAgC;AAChC,2CAA6B;AAE7B,+CAA+C;AAC/C,mDAAmD;AACnD,IAAA,eAAM,EAAC,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,SAAS,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;AAElE;;;GAGG;AACH,SAAgB,yBAAyB;IACvC,OAAO,OAAO,CAAC,GAAG,CAAC,gBAAgB,KAAK,GAAG,CAAC;AAC9C,CAAC;AAED;;;GAGG;AACH,SAAgB,eAAe,CAAC,YAAsB;IACpD,IAAI,CAAC,yBAAyB,EAAE,EAAE,CAAC;QACjC,OAAO,CAAC,mDAAmD;IAC7D,CAAC;IAED,MAAM,OAAO,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IAEhE,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;QACvB,MAAM,IAAI,KAAK,CACb,kEAAkE,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI;YACtF,gEAAgE,CACnE,CAAC;IACJ,CAAC;AACH,CAAC;AAED;;GAEG;AACH,SAAgB,SAAS,CAAC,OAAe;IACvC,IAAI,CAAC,yBAAyB,EAAE,EAAE,CAAC;QACjC,MAAM,IAAI,KAAK,CAAC,8DAA8D,CAAC,CAAC;IAClF,CAAC;IAED,MAAM,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACnC,IAAI,CAAC,KAAK,EAAE,CAAC;QACX,MAAM,IAAI,KAAK,CAAC,wBAAwB,OAAO,oCAAoC,CAAC,CAAC;IACvF,CAAC;IAED,OAAO,KAAK,CAAC;AACf,CAAC","sourcesContent":["/**\n * Shared test utilities for integration tests\n *\n * This module handles:\n * - Loading .env configuration for tests\n * - Checking TEST_INTEGRATION flag\n * - Validating required API keys\n */\n\nimport { config } from \"dotenv\";\nimport * as path from \"path\";\n\n// Load .env from project root on module import\n// This runs once when the module is first imported\nconfig({ path: path.resolve(__dirname, \"../.env\"), quiet: true });\n\n/**\n * Check if integration tests should run\n * Tests are skipped if TEST_INTEGRATION env var is not set\n */\nexport function shouldRunIntegrationTests(): boolean {\n  return process.env.TEST_INTEGRATION === \"1\";\n}\n\n/**\n * Validate required API keys are present\n * Throws if TEST_INTEGRATION is set but API keys are missing\n */\nexport function validateApiKeys(requiredKeys: string[]): void {\n  if (!shouldRunIntegrationTests()) {\n    return; // Skip validation if not running integration tests\n  }\n\n  const missing = requiredKeys.filter((key) => !process.env[key]);\n\n  if (missing.length > 0) {\n    throw new Error(\n      `Integration tests require the following environment variables: ${missing.join(\", \")}\\n` +\n        `Please set them or unset TEST_INTEGRATION to skip these tests.`\n    );\n  }\n}\n\n/**\n * Get API key from environment or throw if missing (when TEST_INTEGRATION is set)\n */\nexport function getApiKey(keyName: string): string {\n  if (!shouldRunIntegrationTests()) {\n    throw new Error(\"getApiKey should only be called when TEST_INTEGRATION is set\");\n  }\n\n  const value = process.env[keyName];\n  if (!value) {\n    throw new Error(`Environment variable ${keyName} is required for integration tests`);\n  }\n\n  return value;\n}\n"]}